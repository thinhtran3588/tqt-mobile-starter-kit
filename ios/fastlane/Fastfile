# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Build app"
  lane :build do
    # create keychain & use match to download certificates
    keychainName = "abc"
    keychainPassword = "Abc@123"
    create_keychain(
      name: keychainName,
      password: keychainPassword,
      # default_keychain: true,
      unlock: true,
      timeout: 3600,
    )
 
    unlock_keychain(
      path: keychainName,
      password: keychainPassword #password to decrypt match git
    )

    match(
      readonly: true, 
      type: 'appstore',
      storage_mode: 'git',
      keychain_name: keychainName,
      keychain_password: keychainPassword
    )

    get_certificates( # Create or get certificate, and install it
      output_path: "./build" # Download certificate in the build folder (you don't need to create the folder)
    )
    get_provisioning_profile( # Create or get provisioning profile
      output_path: "./build",  # Download provisioning profile in the build folder
      filename: "provisioning.mobileprovision" # Rename the local provisioning profile
    )
    update_project_provisioning( # Set the project provisioning profile (related in Xcode to the General > Signing Release section)
      xcodeproj: "mobile.xcodeproj",
      target_filter: "mobile", # Name of your project
      profile: "./build/provisioning.mobileprovision",
      build_configuration: "Release"
    )
    update_project_team( # Set the right team on your project
      teamid: CredentialsManager::AppfileConfig.try_fetch_value(:team_id)
    )

    build_app(workspace: "mobile.xcworkspace", scheme: "mobile")
  
  end 

  desc "Push a new beta build to TestFlight"
  lane :beta do 
    build
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
    )

  end
end
